// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.17.2
// source: set.sql

package models

import (
	"context"
)

const submitSetPerformed = `-- name: SubmitSetPerformed :one
INSERT INTO tracker.set_performed (
  WORKOUT_ID, GROUP_ID, SET_NUMBER
) VALUES (
  $1, $2, $3
)
ON CONFLICT (WORKOUT_ID, GROUP_ID, SET_NUMBER) 
DO UPDATE SET 
  UPDT_TS = CURRENT_TIMESTAMP
RETURNING id, set_number, workout_id, group_id, cret_ts, updt_ts
`

type SubmitSetPerformedParams struct {
	WorkoutID int32 `json:"workoutID"`
	GroupID   int16 `json:"groupID"`
	SetNumber int16 `json:"setNumber"`
}

func (q *Queries) SubmitSetPerformed(ctx context.Context, arg SubmitSetPerformedParams) (TrackerSetPerformed, error) {
	row := q.db.QueryRowContext(ctx, submitSetPerformed, arg.WorkoutID, arg.GroupID, arg.SetNumber)
	var i TrackerSetPerformed
	err := row.Scan(
		&i.ID,
		&i.SetNumber,
		&i.WorkoutID,
		&i.GroupID,
		&i.CretTs,
		&i.UpdtTs,
	)
	return i, err
}
